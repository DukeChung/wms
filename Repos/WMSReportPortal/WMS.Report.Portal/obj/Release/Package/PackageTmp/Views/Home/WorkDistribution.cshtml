
@{
    ViewBag.Title = "仓库作业分布";
    Layout = null;
}


<script>
    var hours = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'
    ];
    var days = ['收货', '拣货', '上架', '发货'];

    var WorkDistribution = {
        init: function (flag) {
            var height = Math.ceil($(window).height()) * 0.5;
            $(".eachChannelInvOut").height(height);
            WorkDistribution.initChart(flag)
        },
        initChart: function (flag) {
            var lineCol = '';
            var itemCol = ''
            if (flag == '1') {
                lineCol = "#ddd";
                itemCol = "#F00";
            }
            else if (flag == '2') {
                lineCol = "#F0F";
                itemCol = "#18a689";
            }
            $.ajax({
                url: "@Url.Action("GetWorkDistribution", "Home")",
                data: { flag: flag },
                type: "POST",
                success: function (result) {
                    if (result.Success) {

                        echarts.init(document.getElementById("div_WorkDistribution" + flag)).setOption(option = {
                            title: {},
                            legend: {
                                data: ['单据数量'],
                                left: 'left'
                            },
                            polar: {},
                            toolbox: {
                                right: 20,
                                feature: {
                                    restore: {
                                        show: true,
                                        title: '刷新'
                                    },
                                    saveAsImage: {
                                        show: true,
                                        title: '保存图片'
                                    }
                                }
                            },
                            tooltip: {
                                formatter: function (params) {
                                    return hours[params.value[1]] + "点 ：" + days[params.value[0]] + " " + params.value[2];
                                }
                            },
                            angleAxis: {    //点分线
                                type: 'category',
                                data: hours,
                                boundaryGap: false,
                                splitLine: {
                                    show: true,
                                    lineStyle: {
                                        color: lineCol,
                                        type: 'dashed'
                                    }
                                },
                                axisLine: {
                                    show: false
                                }
                            },
                            radiusAxis: {       //主轴线
                                type: 'category',
                                data: days,
                                axisLine: {
                                    show: false
                                },
                                axisLabel: {
                                    rotate: 45
                                }
                            },
                            series: [{
                                name: '单据数量',
                                type: 'scatter',
                                coordinateSystem: 'polar',
                                symbolSize: function (val) {
                                    if (val[2] == 0) {
                                        return 0;
                                    }
                                    else if (val[2] <= 10) {
                                        return 5;
                                    }
                                    else if (val[2] > 10 && val[2] <= 100) {
                                        return 10;
                                    }

                                    else if (val[2] > 100 && val[2] <= 1000) {
                                        return 15;
                                    }
                                    else if (val[2] > 1000 && val[2] <= 10000) {
                                        return 20;
                                    }
                                    else if (val[2] > 10000) {
                                        return 25;
                                    }
                                },
                                itemStyle: {
                                    normal: {
                                        color: itemCol
                                    }
                                },
                                data: WorkDistribution.formartData(result.Data)
                            }]
                        });
                    }
                }
            });
        },
        formartData: function (data) {
            var lineData = [];
            if (data != null) {
                if (data.ReceiptQty != null && data.ReceiptQty.length > 0) {
                    for (var i = 0; i < data.ReceiptQty.length; i++) {
                        for (var j = 0; j < hours.length; j++) {
                            if (parseInt(hours[j]) == parseInt(data.ReceiptQty[i].Hours)) {
                                lineData.push([0, hours[j], data.ReceiptQty[i].Qty]);
                            }
                            else {
                                lineData.push([0, hours[j], 0]);
                            }
                        }
                    }
                }
                if (data.PickingQty != null && data.PickingQty.length > 0) {
                    for (var i = 0; i < data.PickingQty.length; i++) {
                        for (var j = 0; j < hours.length; j++) {
                            if (parseInt(hours[j]) == parseInt(data.PickingQty[i].Hours)) {
                                lineData.push([1, hours[j], data.PickingQty[i].Qty]);
                            }
                            else {
                                lineData.push([1, hours[j], 0]);
                            }
                        }
                    }
                }
                if (data.ShelveQty != null && data.ShelveQty.length > 0) {
                    for (var i = 0; i < data.ShelveQty.length; i++) {
                        for (var j = 0; j < hours.length; j++) {
                            if (parseInt(hours[j]) == parseInt(data.ShelveQty[i].Hours)) {
                                lineData.push([2, hours[j], data.ShelveQty[i].Qty]);
                            }
                            else {
                                lineData.push([2, hours[j], 0]);
                            }
                        }
                    }
                }
                if (data.ShipmentQty != null && data.ShipmentQty.length > 0) {
                    for (var i = 0; i < data.ShipmentQty.length; i++) {
                        for (var j = 0; j < hours.length; j++) {
                            if (parseInt(hours[j]) == parseInt(data.ShipmentQty[i].Hours)) {
                                lineData.push([3, hours[j], data.ShipmentQty[i].Qty]);
                            }
                            else {
                                lineData.push([3, hours[j], 0]);
                            }
                        }
                    }
                }
            }
            return lineData;
        }
    }

    $(function () {
        WorkDistribution.init('@ViewBag.Flag');
    });

</script>