@using NBK.WMS.Portal.Helpers
@using NBK.AuthServiceUtil
@{
    ViewBag.Title = "生产加工单管理";
}

@Html.Breadcrumb("增值服务", "生产加工单管理")
<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div id="div_AssemblyList" class="ibox-content m-b-sm border-bottom">
        <div class="row">
            <div class="col-sm-3">
                @Html.SearchTextBox("加工单号", "AssemblyOrderSearch")
            </div>
            <div class="col-sm-3">
                @Html.SearchTextBox("成品名称", "SkuNameSearch")
            </div>
            <div class="col-sm-3">
                @Html.SearchTextBox("成品UPC", "SkuUPCSearch")
            </div>
            <div class="col-sm-3">
                <label class="control-label">单据状态</label>
                <select id="StatusSearch" name="StatusSearch" class="form-control">
                    <option v-for="item in StatusList" v-bind:value="item.Value">{{ item.Text }}</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                @Html.DataPickerTextBox("计划加工日期", "PlanProcessingDateSearch")
            </div>
            <div class="col-sm-3">
                @Html.DataPickerTextBox("计划完工日期", "PlanCompletionDateSearch")
            </div>
            <div class="col-sm-3">
                @Html.DataPickerTextBox("实际加工日期", "ActualProcessingDateSearch")
            </div>
            <div class="col-sm-3">
                @Html.DataPickerTextBox("实际完工日期", "ActualCompletionDateSearch")
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                @Html.SearchTextBox("外部单据号", "ExternalOrderSearch")
            </div>
            <div class="col-sm-3">
                @Html.SearchTextBox("渠道", "Channel")
            </div>
            <div class="col-sm-1">
                <button id="btnSearch" class="btn btn-primary" type="button" v-on:click="search" style="margin-top:23px;float: left; ">查询</button>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content" style="overflow-x:auto">
                    <table id="gvAssembly" class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th data-data="AssemblyOrder">加工单号</th>
                                <th data-data="SkuName">成品名称</th>
                                <th data-data="StatusText">单据状态</th>
                                <th data-data="Channel">渠道</th>
                                <th data-data="PlanQty">计划加工数量</th>
                                <th data-data="ActualQty">实际加工数量</th>
                                <th data-data="PlanProcessingDateText">计划加工日期</th>
                                <th data-data="PlanCompletionDateText">计划完工日期</th>
                                <th data-data="ActualProcessingDateText">实际加工日期</th>
                                <th data-data="ActualCompletionDateText">实际完工日期</th>
                                <th data-data="ExternalOrder">外部单据号</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/dataPicker")
    <script src="~/Scripts/Utility/Common.js"></script>
    <script type="text/javascript">
        var AssemblyList = {
            statusVM: {},
            initData: function () {
                $.ajax({
                    url: "@Url.Action("GetAssemblyStatusList", "Assembly")",
                    type: "GET",
                    success: function (data) {
                        if (data.Success) {
                            AssemblyList.initVue(data.Data);
                        } else {
                            msgErro(data.Message);
                        }
                    }
                });
            },
            initVue: function (data) {
                this.statusVM = new Vue({
                    el: "#div_AssemblyList",
                    data: { StatusList: data },
                    methods: {
                        search: function () {
                            table.ajax.reload();
                        }
                    }
                });
            }
        }


        var table;
        $(document).ready(function () {
            $('#divPlanProcessingDateSearch .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('#divPlanCompletionDateSearch .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('#divActualProcessingDateSearch .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('#divActualCompletionDateSearch .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            table = $('#gvAssembly').DataTable({
                "sAjaxSource": "/Assembly/GetAssemblyList",
                "fnServerParams": function (aoData) { //查询条件
                    aoData.push(
                        { "name": "AssemblyOrderSearch", "value": $("#AssemblyOrderSearch").val() },
                        { "name": "SkuNameSearch", "value": $("#SkuNameSearch").val() },
                        { "name": "SkuUPCSearch", "value": $("#SkuUPCSearch").val() },
                        { "name": "StatusSearch", "value": $("#StatusSearch").val() },
                        { "name": "PlanProcessingDateSearch", "value": $("#PlanProcessingDateSearch").val() },
                        { "name": "PlanCompletionDateSearch", "value": $("#PlanCompletionDateSearch").val() },
                        { "name": "ActualProcessingDateSearch", "value": $("#ActualProcessingDateSearch").val() },
                        { "name": "ActualCompletionDateSearch", "value": $("#ActualCompletionDateSearch").val() },
                        { "name": "ExternalOrderSearch", "value": $("#ExternalOrderSearch").val() },
                        { "name": "Channel", "value": $("#Channel").val() }
                    );
                },
                dom: 'Bfrtip',
                buttons: [
                    @if (AuthorizeManager.HasFunction(AuthKeyConst.VAS_Assembly_View, HttpContext.Current.User.Identity.Name))
                    {
                        <text>
                        {
                            text: '创建加工单',
                            action: function (e, dt, node, config) {
                                window.location.href = "/Assembly/AddAssembly";
                            }
                        }
                        </text>
                    }
                ],
                "columnDefs": [
                    {
                        "targets": 0,
                        "width": "15%",
                        render: function (data, type, full, meta) {
                            @if (AuthorizeManager.HasFunction(AuthKeyConst.VAS_Assembly_View, HttpContext.Current.User.Identity.Name))
                            {
                                <text>
                            return '<a target="_blank" href="/Assembly/AssemblyView?sysId=' + full.SysId + '">' + full.AssemblyOrder + '</a>';
                            </text>
                            }
                            else
                            {
                                <text>
                            return full.AssemblyOrder;
                            </text>
                            }
                        }
                    }
                ],
                "bServerSide": true,
                "bProcessing": true,
                "bPaginate": true, //翻页功能
                "bLengthChange": true, //改变每页显示数据数量
                "bFilter": false, //过滤功能
                "bSort": false, //排序功能
                "bInfo": true, //页脚信息
                "bAutoWidth": true, //自动宽度
                "aaSorting": [[2, "Asc"]],
                "oLanguage": {
                    "sLengthMenu": "每页显示 _MENU_ 条记录",
                    "sInfo": "从 _START_ 到 _END_ /共 _TOTAL_ 条数据",
                    "sInfoEmpty": "",
                    "sInfoFiltered": "(从 _MAX_ 条数据中检索)",
                    "oPaginate": {
                        "sFirst": "首页",
                        "sPrevious": "前一页",
                        "sNext": "后一页",
                        "sLast": "尾页"
                    },
                    "sZeroRecords": "没有检索到数据"
                }
            });

            AssemblyList.initData();
        });
    </script>
}