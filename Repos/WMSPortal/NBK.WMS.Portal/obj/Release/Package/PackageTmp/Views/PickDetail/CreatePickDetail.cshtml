


@using NBK.WMS.Portal.Helpers
@model List<NBK.ECService.WMS.DTO.SelectItem>

@{
    ViewBag.Title = "创建拣货单";
}

@Html.Breadcrumb("拣货单管理", "/PickDetail/Index", "创建拣货单")
<div class="wrapper wrapper-content animated fadeInRight ecommerce">

    <div class="ibox-content m-b-sm border-bottom">
        <div class="row">
            <div class="col-sm-12">
                @Html.SearchTextBox("UPC", "SkuUPCSearch")
            </div>

        </div>
        <div class="row">
            <div class="col-sm-4">
                @Html.SearchTextBox("出库单号", "OutboundOrderSearch")
            </div>
            <div class="col-sm-4">
                @Html.SearchTextBox("服务综合体名称", "ServiceStationNameSearch")
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    <label class="control-label" for="OutboundTypeSearch">单据类型</label>
                    <select class="form-control m-b" name="account" id="OutboundTypeSearch">
                        <option>全部</option>
                        <option value="10">正常</option>
                        <option value="20">B2C</option>
                        <option value="30">B2B</option>
                        <option value="40">退货出库</option>
                        <option value="50">快进快出</option>
                        <option value="60">移仓</option>
                        <option value="70">原材料出库</option>
                        <option value="80">农资出库</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                <div class="form-group">
                    <label class="control-label" for="">商品数量</label>
                    <div class="row">
                        <div class="col-sm-6">
                            <select class="form-control m-b" name="SkuQtyCountSymbol" id="SkuQtyCountSymbol">
                                <option value="1">小于</option>
                                <option value="2">等于</option>
                                <option value="3">大于</option>
                            </select>
                        </div>
                        <div class="col-sm-6">
                            <input type="text" id="SkuQtyCountSearch" name="SkuQtyCountSearch" placeholder="商品数量" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    <label class="control-label" for="">SKU数量</label>
                    <div class="row">
                        <div class="col-sm-6">
                            <select class="form-control m-b" name="SkuTypeCountSymbol" id="SkuTypeCountSymbol">
                                <option value="1">小于</option>
                                <option value="2">等于</option>
                                <option value="3">大于</option>
                            </select>
                        </div>
                        <div class="col-sm-6">
                            <input type="text" id="SkuTypeCountSearch" name="SkuTypeCountSearch" placeholder="SKU数量" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <label class="control-label" for="">承运商:</label>
                <select class="form-control m-b" name="CarrierNameSearch" id="CarrierNameSearch">
                    <option value="">全部</option>
                    @{
                        var carrList = ViewBag.CarrList;
                        if (carrList != null && carrList.Count > 0)
                        {
                            foreach (var info in carrList)
                            {
                                <option value="@info.CarrierName">@info.CarrierName</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                @Html.DataPickerTextBox("下单时间从", "StartOutboundDateSearch")
            </div>
            <div class="col-sm-4">
                @Html.DataPickerTextBox("下单时间到", "EndOutboundDateSearch")
            </div>
            <div class="col-sm-4">
                @Html.SearchTextBox("收货人姓名", "ConsigneeNameSearch")
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                @Html.SearchTextBox("业务类型", "OutboundChildTypeSearch")
            </div>
            <div class="col-sm-4">
                <button id="btnSearch" class="btn btn-primary" type="button" style="margin-top: 23px; float: left;">查询</button>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8">
                <a onclick="ToDayOutOfStorage();">
                    <i class="fa ">[当天未出库单据]</i>
                </a>
                <a onclick="OutOfStorageOnlySku();">
                    <i class="fa ">[单品订单]</i>
                </a>
                <a onclick="OutOfStorageMultipleSKU();">
                    <i class="fa ">[组合订单]</i>
                </a>
                <a onclick="OutOfStorageClear();">
                    <i class="fa ">[清空条件]</i>
                </a>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <div class="form-group">
                        <label class="control-label" for="">拣货策略:</label>
                        <select class="form-control m-b" name="PickRule" id="PickRule">
                            @{
                                foreach (var info in Model)
                                {
                                    <option value="@info.Value">@info.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <table id="gvPickOutbound" class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th width="3%"><input type="checkbox" id="ckbAll" onclick="gvCheckAll(this);" /></th>
                                <th data-data="OutboundOrder" width="10%">出库单号</th>
                                <th data-data="OutboundTypeText" width="10%">单据类型</th>
                                <th data-data="OutboundChildType" width="10%">业务类型</th>
                                <th data-data="TotalQyt" width="10%">商品总数</th>
                                <th data-data="SkuTypeQty" width="10%">SKU数</th>
                                <th data-data="Remark" width="10%">订单备注</th>
                                <th data-data="ServiceStationName" width="10%">服务综合体名称</th>
                                <th data-data="ConsigneeAddress" width="27%">收货地址</th>
                                <th data-data="ConsigneeName" width="10%">收货人姓名</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<input id="showInsufficientStock" style="display:none" data-toggle="modal" data-target="#showInsufficientStockList">
<div class="modal fade" id="showInsufficientStockList" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width:930px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="myModalLabel">
                    库存不足商品明细列表
                </h4>
            </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th class="text-center">商品名称</th>
                        <th class="text-center">商品编号</th>
                        <th class="text-center">UPC</th>
                        <th class="text-center">发货数量</th>
                        <th class="text-center">分配数量</th>
                        <th class="text-center">拣货数量</th>
                        <th class="text-center">冻结数量</th>
                        <th class="text-center">可用库存</th>
                        <th class="text-center">差异数量</th>
                    </tr>
                </thead>
                <tbody id="InsufficientStockSkuList"></tbody>
            </table>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/dataPickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/print")
    @Scripts.Render("~/plugins/dataPicker")

    <script type="text/javascript">
        var table;
        $(document).ready(function () {
            $('#divStartOutboundDateSearch .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('#divEndOutboundDateSearch .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });


            table = $('#gvPickOutbound').DataTable({
                "sAjaxSource": "GetPickOutboundList",
                "fnServerParams": function (aoData) { //查询条件
                    aoData.push(
                        { "name": "SkuUPCSearch", "value": $("#SkuUPCSearch").val() },
                        { "name": "ServiceStationNameSearch", "value": $("#ServiceStationNameSearch").val() },
                        { "name": "OutboundOrderSearch", "value": $("#OutboundOrderSearch").val() },
                        { "name": "OutboundTypeSearch", "value": $("#OutboundTypeSearch").val() },
                        { "name": "SkuQtyCountSymbol", "value": $("#SkuQtyCountSymbol").val() },
                        { "name": "SkuQtyCountSearch", "value": $("#SkuQtyCountSearch").val() },
                        { "name": "SkuTypeCountSymbol", "value": $("#SkuTypeCountSymbol").val() },
                        { "name": "SkuTypeCountSearch", "value": $("#SkuTypeCountSearch").val() },
                        { "name": "CarrierNameSearch", "value": $("#CarrierNameSearch").val() },
                        { "name": "StartOutboundDateSearch", "value": $("#StartOutboundDateSearch").val() },
                        { "name": "EndOutboundDateSearch", "value": $("#EndOutboundDateSearch").val() },
                        { "name": "ConsigneeNameSearch", "value": $("#ConsigneeNameSearch").val() },
                        { "name": "OutboundChildTypeSearch", "value": $("#OutboundChildTypeSearch").val() }
                    );
                },
                dom: 'Bfrtip',
                buttons: [
                    'pageLength',
                    {
                        text: '批量打印拣货单',
                        action: function (e, dt, node, config) {
                            var sysIds = GetGridMultiselectSysId();
                            if (sysIds != null) {
                                GeneratePickDetail("ByBatch", sysIds);

                            }
                        }
                    },
                    {
                        text: '按单打印拣货单',
                        action: function (e, dt, node, config) {
                            var sysIds = GetGridMultiselectSysId();
                            if (sysIds != null) {
                                GeneratePickDetail("ByOrder", sysIds);
                            }
                        }
                    }
                ],
                "columnDefs": [
                    {
                        "targets": 0,
                        "width": "15px",
                        render: function (data, type, full, meta) {
                            return '<input type="checkbox" id="checkbox-all-' + full.SysId + '" value="' + full.SysId + '" />';
                        }
                    }
                ],
                "bServerSide": true,
                "bProcessing": true,
                "bPaginate": true, //翻页功能
                "bLengthChange": true, //改变每页显示数据数量
                "bFilter": false, //过滤功能
                "bSort": false, //排序功能
                "bInfo": true, //页脚信息
                "bAutoWidth": true, //自动宽度
                "aaSorting": [[2, "Asc"]],
                "oLanguage": {
                    buttons: {
                        pageLength: {
                            _: "每页显示 %d 条记录"
                        }
                    },
                    "sLengthMenu": "每页显示 _MENU_ 条记录",
                    "sInfo": "从 _START_ 到 _END_ /共 _TOTAL_ 条数据",
                    "sInfoEmpty": "",
                    "sInfoFiltered": "(从 _MAX_ 条数据中检索)",
                    "oPaginate": {
                        "sFirst": "首页",
                        "sPrevious": "前一页",
                        "sNext": "后一页",
                        "sLast": "尾页"
                    },
                    "sZeroRecords": "没有检索到数据"
                }
            });

            $("#btnSearch").bind("click", function () { //按钮 触发table重新请求服务器
                table.ajax.reload();
            });
        });

        function GeneratePickDetail(pickType, pickSysIds) {
            var pickRule = $("#PickRule").val();
            saveLoading('show');
            $.ajax({
                url: "/PickDetail/GeneratePickDetailByPickRule",
                type: "post",
                data: { pickType, pickSysIds, pickRule },
                        success: function (data) {
                    saveLoading('hide');
                    if (data.success) {
                        table.ajax.reload();
                        msgSuccess('', function () {
                        });
                        if (pickType === "ByOrder") {
                            printbyOrder(data.pickDetailOrders);
                        } else {
                            printbyBatch(data.pickDetailOrders);
                        }

                    } else {
                        if (data.message.indexOf('库存不足') >= 0) {//库存不足，弹出不足明细
                            msgErroConfirm(data.message, function (isConfirm) {
                                if (isConfirm) {
                                    $.ajax({
                                        url: "@Url.Action("GetInsufficientStockSkuList", "Outbound")",
                                        data: { "PickSysIds": pickSysIds, "Type": 1 },
                                        dataType: "json",
                                        type: "post",
                                        success: function (data) {
                                            if (data.success) {
                                                var trList = new Array();
                                                for (var i = 0; i < data.data.length; i++) {
                                                    trList.push('<tr style="padding:10px;">');
                                                    trList.push('<td class="text-center">' + data.data[i].SkuName + '</td>')
                                                    trList.push('<td class="text-center">' + data.data[i].SkuCode + '</td>');
                                                    trList.push('<td class="text-center">' + data.data[i].UPC + '</td>');
                                                    trList.push('<td class="text-center">' + data.data[i].OutboundQty + '</td>');

                                                    trList.push('<td class="text-center">' + data.data[i].AllocatedQty + '</td>');
                                                    trList.push('<td class="text-center">' + data.data[i].PickedQty + '</td>');
                                                    trList.push('<td class="text-center">' + data.data[i].FrozenQty + '</td>');

                                                    trList.push('<td class="text-center">' + data.data[i].StockQty + '</td>');
                                                    trList.push('<td class="text-center">' + data.data[i].DiffQty + '</td>');
                                                    trList.push('</tr>');
                                                }
                                                $("#InsufficientStockSkuList").html(trList.join(''));
                                            }
                                            else {
                                                $("#InsufficientStockSkuList").html('<td colspan="9" style="padding:15px 10px;text-align: center;">获取库存不足商品异常</td>')
                                            }
                                            $("#showInsufficientStock").click();
                                        }
                                    });

                                }
                            }, true);
                        } else {
                            msgErro(data.message);
                        }
                    }
                        }
            });
        }

        function printbyOrder(pickDetailOrders) {
            var LODOP = getLodop();
            LODOP.SET_LICENSES("", "B373432C4C51542C45D4E0F4A634612C", "C94CEE276DB2187AE6B65D56B3FC2848", "");
            LODOP.SET_PRINTER_INDEX("@ViewBag.PrintNameOrder");
            for (var i = 0; pickDetailOrders.length > i; i++) {
                LODOP.SET_PRINT_STYLEA(0, "FontSize", 18);
                LODOP.ADD_PRINT_URL(30, 20, 746, "95%", encodeURI("http://" + window.location.host + "/Print/PrintPickDetailByOrder?pickDetailOrder=" + pickDetailOrders[i] + "&userName=@ViewBag.UserName" + "&warehouseSysId=@ViewBag.WarehouseSysId"));
                LODOP.ADD_PRINT_BARCODE(40, 550, 206, 58, "128B", pickDetailOrders[i]);
                LODOP.SET_PRINT_STYLEA(0, "HOrient", 3);
                LODOP.SET_PRINT_STYLEA(0, "VOrient", 3);
                //LODOP.PREVIEW();
                LODOP.PRINT();
            }
            msgAlert("打印成功");
        }

        function printbyBatch(pickDetailOrders) {
            var LODOP = getLodop();
            LODOP.SET_LICENSES("", "B373432C4C51542C45D4E0F4A634612C", "C94CEE276DB2187AE6B65D56B3FC2848", "");
            LODOP.SET_PRINTER_INDEX("@ViewBag.PrintNameBatch");
            LODOP.SET_PRINT_STYLEA(0, "FontSize", 18);
            LODOP.ADD_PRINT_URL(30, 20, 746, "95%", encodeURI("http://" + window.location.host + "/Print/PrintPickDetailByBatch?pickDetailOrder=" + pickDetailOrders + "&userName=@ViewBag.UserName" + "&warehouseSysId=@ViewBag.WarehouseSysId"));
            LODOP.ADD_PRINT_BARCODE(40, 550, 206, 58, "128B", pickDetailOrders);
            LODOP.SET_PRINT_STYLEA(0, "HOrient", 3);
            LODOP.SET_PRINT_STYLEA(0, "VOrient", 3);
            //LODOP.PREVIEW();
            LODOP.PRINT();
            msgAlert("打印成功");
        }


        ///ToDay当天未出库
        function ToDayOutOfStorage() {
            TextClear();
            var myDate = new Date();
            var time1 = myDate.toLocaleDateString();
            $("#StartOutboundDateSearch").val(time1);
            $("#EndOutboundDateSearch").val(time1);
            table.ajax.reload();
        }

        // 单品订单
        function OutOfStorageOnlySku() {
            TextClear();
            var myDate = new Date();
            var time1 = myDate.toLocaleDateString();
            $("#StartOutboundDateSearch").val(time1);
            $("#EndOutboundDateSearch").val(time1);
            $("#SkuTypeCountSearch").val(1);
            $("#SkuTypeCountSymbol").find("option")[1].selected = true;
            $("#OutboundTypeSearch").find("option")[2].selected = true;
            table.ajax.reload();
        }

        // 组合订单
        function OutOfStorageMultipleSKU() {
            TextClear();
            var myDate = new Date();
            var time1 = myDate.toLocaleDateString();
            $("#StartOutboundDateSearch").val(time1);
            $("#EndOutboundDateSearch").val(time1);
            $("#SkuTypeCountSearch").val(1);
            $("#SkuTypeCountSymbol").find("option")[2].selected = true;
            $("#OutboundTypeSearch").find("option")[2].selected = true;
            table.ajax.reload();
        }


        ///清空
        function OutOfStorageClear() {
            TextClear();
            table.ajax.reload();

        }

        function TextClear() {
            $("#StartOutboundDateSearch").val("");
            $("#EndOutboundDateSearch").val("");
            $("#SkuTypeCountSearch").val("");
            $("#SkuTypeCountSymbol").find("option")[0].selected = true;
            $("#OutboundTypeSearch").find("option")[0].selected = true;
        }

    </script>



}
