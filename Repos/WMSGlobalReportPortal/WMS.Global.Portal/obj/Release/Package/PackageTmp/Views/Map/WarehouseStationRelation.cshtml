@using WMS.Global.Portal.Helpers
@{
    ViewBag.Title = "仓库业务分布";
}
@Html.Breadcrumb("仓库业务分布", "")
<div id="content">
    <div class="row margin-top-5">
        <article class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
            <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                <header>
                    <span class="widget-icon"> <i class="fa  fa-map-marker "></i> </span>
                    <h2 class="title-font">仓库业务分布</h2>
                </header>
                <div>
                    <div class="widget-body no-padding">
                        <div id="div_HistoryServiceStation" style="background-color:#e6e6e6"> </div>

                    </div>

                </div>

            </div>
        </article>

        <article class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
            <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                <header>
                    <span class="widget-icon"> <i class="fa fa-codepen"></i> </span>
                    <h2 class="title-font">仓库下行业务关系图</h2>
                </header>
                <div>
                    <div class="widget-body no-padding">
                        <div id="div_WarehouseStationRelation"> </div>

                    </div>

                </div>

            </div>
        </article>

    </div>
</div>
<script src="~/Scripts/plugin/echarts/extension/china.js"></script>
<script src="~/Scripts/plugin/echarts/echarts-gl.min.js"></script>
<script>
    var height = Math.ceil($(window).height()) - 150;
    $("#div_WarehouseStationRelation").height(height);

    $("#div_HistoryServiceStation").height(height);


    var myChart11 = echarts.init(document.getElementById("div_HistoryServiceStation"));
    $(function () {
        GetMapChart();
    })

    function GetMapChart() {
        myChart11.setOption(optioning = {
            title: {
                text: '仓库业务分布',
                subtext: '每个坐标点表示收货人坐标，强、中、弱表示发货次数',
                left: 'center',
                top: 'top',
                textStyle: {
                    color: '#fff'
                }
            },
            backgroundColor: '#333333',
            tooltip: {
                show: true,
                formatter: function (params) {
                    var res = "发货量:" + params.value[2] + ' 单'
                    return res;;
                }
            },
            legend: {
                left: 'left',
                data: ['强', '中', '弱'],
                textStyle: {
                    color: '#ccc'
                }
            },
            geo: {
                map: 'china',
                roam: true,
                zoom: 1.1,
                label: {
                    emphasis: {
                        show: false
                    }
                },
                itemStyle: {
                    normal: {
                        areaColor: '#323c48',
                        borderColor: '#111'
                    },
                    emphasis: {
                        areaColor: '#2a333d'
                    }
                }
            },
            series: [{
                name: '弱',
                type: 'scatterGL',
                coordinateSystem: 'geo',
                symbolSize: 1,
                itemStyle: {
                    shadowBlur: 2,
                    shadowColor: 'rgba(37, 140, 249, 0.8)',
                    color: 'rgba(37, 140, 249, 0.8)'
                },
                data: []
            }, {
                name: '中',
                type: 'scatterGL',
                coordinateSystem: 'geo',
                symbolSize: 1,
                itemStyle: {
                    shadowBlur: 2,
                    shadowColor: 'rgba(14, 241, 242, 0.8)',
                    color: 'rgba(14, 241, 242, 0.8)'
                },
                data: []
            }, {
                name: '强',
                type: 'scatterGL',
                coordinateSystem: 'geo',
                symbolSize: 2,
                itemStyle: {
                    shadowBlur: 2,
                    shadowColor: 'rgba(255, 255, 255, 0.8)',
                    color: 'rgba(255, 255, 255, 0.8)'
                },
                data: []
            }]
        });
    }


    var pageNumber = 0;
    var flag = true;
    var timer = setInterval(function () {
        var data0 = optioning.series[0].data;
        var data1 = optioning.series[1].data;
        var data2 = optioning.series[2].data;
        $.ajax({
            url: "/Map/GetHistoryServiceStationData?page=" + pageNumber,
            type: "GET",
            success: function (result) {
                if (result.success) {
                    if (result.data.length > 0) {
                        for (var i = 0; i < result.data.length; i++) {
                            if (result.data[i].TotalCount <= 5) {
                                data0.push({
                                    value: [result.data[i].Lng, result.data[i].Lat, result.data[i].TotalCount]
                                });
                            }
                            else if (result.data[i].TotalCount > 5 && result.data[i].TotalCount <= 10) {
                                data1.push({
                                    value: [result.data[i].Lng, result.data[i].Lat, result.data[i].TotalCount]
                                });
                            }
                            else {
                                data2.push({
                                    value: [result.data[i].Lng, result.data[i].Lat, result.data[i].TotalCount]
                                });
                            }
                        }
                        myChart11.setOption(optioning);
                        pageNumber++;
                    } else {
                        clearInterval(timer);
                        flag = false;
                    }
                }
            }
        });
    }, 3000);













    var myChart = echarts.init(document.getElementById("div_WarehouseStationRelation"));
    var pageInit = {};

    pageInit.GetLegendOrCategories = function (data, type) {
        var leg = [];
        var categories = [];
        for (var i = 0; i < data.length; i++) {
            if ($.inArray(data[i].Name, leg) == -1) {
                leg.push(data[i].Name);
                categories.push({
                    'name': data[i].Name
                });
            }
        }

        if (type == 1) {
            return leg;
        } else {
            return categories;
        }
    };

    pageInit.GetLinks = function (data) {
        var links = [];
        for (var i = 0; i < data.length; i++) {
            links.push({
                "source": data[i].Name,
                "target": data[i].ConsigneeCity
            });
        }
        var ware = pageInit.GetLegendOrCategories(data, 1);
        for (var i = 0; i < ware.length; i++) {
            links.push({
                "source": "国资商城",
                "target": ware[i]
            })
        }
        return links;
    };

    pageInit.GetData = function (data) {
        var datas = [];
        datas.push({
            "name": "国资商城",
            "symbolSize": 20,
            "draggable": "true"
        });

        var temp = [];
        for (var i = 0; i < data.length; i++) {
            if ($.inArray(data[i].ConsigneeCity, temp) == -1) {
                temp.push(data[i].ConsigneeCity);
                datas.push({
                    "name": data[i].ConsigneeCity,
                    "value": pageInit.GetCityTotalCount(data, data[i].ConsigneeCity),
                    "symbolSize": 10,
                    "category": data[i].Name,
                    "draggable": "true",
                    "itemStyle": {
                        "normal": {
                            "color": '#3ED5DC'
                        }
                    }
                });
            }
        }

        var ware = pageInit.GetLegendOrCategories(data, 1);
        for (var i = 0; i < ware.length; i++) {
            datas.push({
                "name": ware[i],
                "value": pageInit.GetWareTotalCount(data, ware[i]),
                "symbolSize": 15,
                "category": ware[i],
                "draggable": "true",
                "itemStyle": {
                    "normal": {
                        "color": '#138EFD'
                    }
                }
            });
        }
        return datas;
    };

    pageInit.GetWareTotalCount = function (data, name) {
        var count = 0;
        for (var i = 0; i < data.length; i++) {
            if (data[i].Name == name) {
                count++;
            }
        }
        return count;
    }

    pageInit.GetCityTotalCount = function (data, name) {
        var count = 0;
        for (var i = 0; i < data.length; i++) {
            if (data[i].ConsigneeCity == name) {
                count = parseInt(count) + parseInt(data[i].TotalCount);
            }
        }
        return count;
    }

    pageInit.GetMapChart = function () {
        $.ajax({
            url: "/Map/GetWarehouseStationRelation",
            type: "GET",
            success: function (result) {
                if (result.success) {
                    myChart.setOption(option = {
                        title: {
                            text: '仓库下行业务关系图',
                            subtext: '仓库数量代表覆盖城市数，城市数量代表',
                            left: 'center',
                            top: 'top'
                        },
                        backgroundColor: new echarts.graphic.RadialGradient(0.3, 0.3, 0.8, [{
                            offset: 0,
                            color: '#f7f8fa'
                        }, {
                            offset: 1,
                            color: '#cdd0d5'
                        }]),
                        tooltip: {
                            //formatter: function (params) {
                            //    //if (params.color == "#138EFD") {
                            //    //    return params.name + ":" + params.value + "个市";
                            //    //}
                            //    ////else if (params.color == "#3ED5DC") {
                            //    ////    return params.name + ":" + params.value + "个单子";
                            //    ////}
                            //}
                        },
                        legend: [{
                            formatter: function (name) {
                                return echarts.format.truncateText(name, 40, '14px Microsoft Yahei', '…');
                            },
                            tooltip: {
                                show: true
                            },
                            bottom: 20,
                            selectedMode: 'false',
                            data: pageInit.GetLegendOrCategories(result.data, 1)
                        }],

                        animationDuration: 100,
                        animationEasingUpdate: 'quinticInOut',
                        series: [{
                            name: '国资商城',
                            type: 'graph',
                            layout: 'force',
                            force: {
                                repulsion: 1000
                            },
                            data: pageInit.GetData(result.data),
                            links: pageInit.GetLinks(result.data),
                            categories: pageInit.GetLegendOrCategories(result.data, 2),
                            focusNodeAdjacency: true,
                            roam: true,
                            label: {
                                normal: {
                                    show: true,
                                    position: 'top',
                                }
                            },
                            lineStyle: {
                                normal: {
                                    color: 'source',
                                    curveness: 0,
                                    type: "solid"
                                }
                            }
                        }]
                    });
                }
            }
        });
    }

    $(function () {
        pageInit.GetMapChart();
    })

</script>